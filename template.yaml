apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: scaffold_front_end
  title: Scaffold Front End
  description: Crea un artefacto basado en el Scaffold de Front End
  tags: ['recommended', 'react', 'angular'] 
spec:
  owner: user:guest
  type: service

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Ingrese los parámetros de configuracion
      required:
        - name

      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
        
        type:
          title: Microfront
          type: boolean
          default: false
          description: ¿Es microfront?
          ui:autofocus: true
          ui:options:
            rows: 5
   


    #- title: Choose a location
    #  required:
    #    - repoUrl
    #  properties:
    #    repoUrl:
    #      title: Repository Location
    #      type: string
    #      ui:field: RepoUrlPicker
    #      ui:options:
    #        allowedHosts:
    #          - github.com

  # These steps are executed in the scaffolder backend, using data that we gathered
  # via the parameters above.
  steps:
    # Each step executes an action, in this case one templates files into the working directory.
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}

    # This step publishes the contents of the working directory to GitHub.
    


  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: Repository
        url: ${{ steps.create.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
